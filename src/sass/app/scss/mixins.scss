// =============================================================================
// String Replace
// =============================================================================

@function str-replace($string, $search, $replace: "") {
  $index: str-index($string, $search);

  @if $index {
    @return str-slice($string, 1, $index - 1) + $replace + str-replace(str-slice($string, $index + str-length($search)), $search, $replace);
  }

  @return $string;
}

// =============================================================================
// Font Face
// =============================================================================

@mixin font-face($name, $path, $weight: null, $style: null, $exts: eot woff2 woff ttf svg) {
  $src: null;

  $extmods: (
          eot: "?",
          svg: "#" + str-replace($name, " ", "_")
  );

  $formats: (
          otf: "opentype",
          ttf: "truetype"
  );

  @each $ext in $exts {
    $extmod: if(map-has-key($extmods, $ext), $ext + map-get($extmods, $ext), $ext);
    $format: if(map-has-key($formats, $ext), map-get($formats, $ext), $ext);
    $src: append($src, url(quote($path + "." + $extmod)) format(quote($format)), comma);
  }

  @font-face {
    font-family: quote($name);
    font-style: $style;
    font-weight: $weight;
    src: $src;
  }
}


@mixin radius($radius: 1000px) {
  border-radius: $radius;
}

@mixin lineOnSides() {
  position: relative;
  height: 100%;
  display: inline-block;
  &:after {
    content: "";
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    height: 1px;
    //border-bottom: 1px solid white;
    //border-top: 1px solid rgba(0, 0, 0, 0.39);
    width: 9999px;
    background-color: rgba(0, 0, 0, 0.39);;
  }
  //&:before {
  //  right: 100%;
  //  margin-right: 15px;
  //}
  &:after {
    left: 100%;
    //margin-left: 15px;
  }
}

@mixin delimiter() {
  height: 1px;
  width: 100%;
  background-color: rgba(0, 0, 0, 0.39);
  @include breakpoint(max-width $mobile) {
    display: none;
  }
}
